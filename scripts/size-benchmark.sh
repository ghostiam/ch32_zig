#!/usr/bin/env bash

# set safe shell mode
set -euo pipefail

base_dir=$(dirname "$0")
root_dir=$(realpath "${base_dir}/..")

columns=("Mode" ".init" ".text" ".rodata" ".data" ".bss" "Total")
modes=("ReleaseSmall" "ReleaseFast" "ReleaseSafe" "Debug")

echo "# Size benchmark" >SIZE_BENCHMARK.md
echo "" >>SIZE_BENCHMARK.md
echo "This document contains the size in bytes of the firmware for each optimize mode." >>SIZE_BENCHMARK.md
echo "" >>SIZE_BENCHMARK.md

build() {
  local optimize="$1"
  local dir="$2"

  rm -rf "${dir}/zig-out"

  (cd "${dir}" && zig build -Doptimize="$optimize" || true)
}

write_size_per_fw() {
  local optimize="$1"
  local dir="$2/zig-out/firmware"

  for file in "${dir}"/*".elf"; do
    if [ ! -f "${file}" ]; then
      continue
    fi

    file_name=$(basename "$file")

    # bloaty output:
    # sections,vmsize,filesize
    # .text,1476,1476
    # .rodata,216,216
    # .init,156,156
    # .bss,4,0
    csv=$(bloaty --csv --domain=vm "${file}" || echo '')
    if [ -z "$csv" ]; then
      echo "Failed to get size for $file"
      continue
    fi

    # get the size of each section
    init=$(echo "$csv" | grep "\.init" | awk -F, '{print $2}' || echo 0)
    text=$(echo "$csv" | grep "\.text" | awk -F, '{print $2}' || echo 0)
    rodata=$(echo "$csv" | grep "\.rodata" | awk -F, '{print $2}' || echo 0)
    data=$(echo "$csv" | grep "\.data" | awk -F, '{print $2}' || echo 0)
    bss=$(echo "$csv" | grep "\.bss" | awk -F, '{print $2}' || echo 0)
    # bin file size
    total=$(stat -c %s "${file%.elf}.bin" || echo 0)

    # write the sizes to the file
    echo "| $optimize | $init | $text | $rodata | $data | $bss | $total |" >>"tmp_size_per_fw_${file_name}.md"
  done
}

merge_size() {
  for file in tmp_size_per_fw_*.md; do
    if [ ! -f "$file" ]; then
      continue
    fi

    fw_name=$(basename "$file" | sed 's/tmp_size_per_fw_//; s/.md//')
    echo "### $fw_name " >>SIZE_BENCHMARK.md
    echo "" >>SIZE_BENCHMARK.md

    for column in "${columns[@]}"; do
      printf "| %s " "$column" >>SIZE_BENCHMARK.md
    done
    printf "|\n" >>SIZE_BENCHMARK.md

    for column in "${columns[@]}"; do
      printf "|--------" >>SIZE_BENCHMARK.md
    done
    printf "|\n" >>SIZE_BENCHMARK.md

    while IFS= read -r line; do
      echo "$line" >>SIZE_BENCHMARK.md
    done <"$file"

    echo "" >>SIZE_BENCHMARK.md
  done

  rm -f "tmp_size_per_fw_"*".md"
}

cd "$root_dir" || exit 1

# Clean up old files
rm -f "tmp_size_per_fw_"*".md"

for dir in "examples/"*/; do
  if [ ! -f "${dir}build.zig" ]; then
    continue
  fi

  dir=$(sed 's/\/$//' <<<"$dir")

  echo "## [${dir}](${dir})" >>SIZE_BENCHMARK.md
  echo "" >>SIZE_BENCHMARK.md

  for mode in "${modes[@]}"; do
    rm -rf "$dir/zig-out"
    build "$mode" "$dir"
    write_size_per_fw "$mode" "$dir"
  done

  merge_size "$dir"
  echo "" >>SIZE_BENCHMARK.md
done

echo "" >>SIZE_BENCHMARK.md
echo 'This document was generated by `size-benchmark.sh` script.' >>SIZE_BENCHMARK.md
