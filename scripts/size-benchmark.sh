#!/usr/bin/env bash

# set safe shell mode
set -euo pipefail

base_dir=$(dirname "$0")
root_dir=$(realpath "${base_dir}/..")

columns=("Mode" "Text" "Data" "Bss" "Total")
modes=("ReleaseSmall" "ReleaseFast" "ReleaseSafe" "Debug")

echo "# Size benchmark" >SIZE_BENCHMARK.md
echo "" >>SIZE_BENCHMARK.md
echo "This document contains the size in bytes of the firmware for each optimize mode." >>SIZE_BENCHMARK.md
echo "" >>SIZE_BENCHMARK.md
echo '`Failed` means that the firmware is too large to fit in the flash memory.' >>SIZE_BENCHMARK.md
echo "" >>SIZE_BENCHMARK.md

build() {
  local optimize="$1"
  local dir="$2"

  rm -rf "${dir}/zig-out"

  (cd "${dir}" && zig build -Doptimize="$optimize" || true)
}

cd "$root_dir" || exit 1

for dir in "examples/"*/; do
  if [ ! -f "${dir}build.zig" ]; then
    continue
  fi

  dir=$(sed 's/\/$//' <<<"$dir")

  echo "## [${dir}](${dir})" >>SIZE_BENCHMARK.md
  echo "" >>SIZE_BENCHMARK.md

  for column in "${columns[@]}"; do
    printf "| %s " "$column" >>SIZE_BENCHMARK.md
  done
  printf "|\n" >>SIZE_BENCHMARK.md

  for column in "${columns[@]}"; do
    printf "|--------" >>SIZE_BENCHMARK.md
  done
  printf "|\n" >>SIZE_BENCHMARK.md

  for mode in "${modes[@]}"; do
    rm -rf "$dir/zig-out"
    build "$mode" "$dir"

    size=$(size "${dir}/zig-out/firmware/blink_ch32v003.elf" | tail -n1 | awk '{print $1 " | " $2 " | " $3 " | " ($1 + $2 + $3)}' || echo "- | - | - | Failed")

    echo "| $mode | $size | " >>SIZE_BENCHMARK.md
  done
  printf "\n\n" >>SIZE_BENCHMARK.md
done

echo 'This document was generated by `size-benchmark.sh` script.' >>SIZE_BENCHMARK.md
